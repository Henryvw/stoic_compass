== README

NEXT STEPS for Mailer Sept 26 2014
- Google Devise set up mailer
- Get CanCan set up
- Set up check boxes for users in user index to "activate" the admin boolean
- Set up check boxes in admin dashboard to create global exercises
- Create boolean paramater in exercises to be 'global'
- In the view for create exercise
  if user.admin? == true
    display tickbox
    send to custom admin_create method that includes the global boolean
  else
    use normal create method
- Also update cancan Ability model
  - admin? CAN access admin_create
  - regular user CANNOT access admin_create


NEXT STEPS: AUgust 8, 2014
- Create Rehearsal Controller and Model
Rehearsal - accepts nested attributes for answers
Rehearsal - has many questions through exercise (or accepts_nested_attributes_for)
- Answers - belongs to rehearsal and question
- Question - has many answers through rehearsal
- Exercise - has many rehearsal

So then undo the answers wired up to the exercises
questions will no longer have direct access to answers

rehearsal.question.answer.each do build


Category of Disciplines and Virtues should be a read-only database, and make the input a drop-down list - i.e. it should be its own model. Each exercise will belong to a category, and each category will have many exercises.
That way, in the future when I want to use that for tags or for drop-down lists, there won't be the possibility of someone inputting a false piece of data that breaks the category


From Christoph:
use Scope to set up security for answers

- if user
- where user.id = current.id




This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
